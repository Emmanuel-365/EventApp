APP_NAME="My Laravel Tenancy App"
APP_ENV=local
APP_KEY= # Generate with: php artisan key:generate
APP_DEBUG=true
APP_URL=http://localhost # Or your chosen local domain e.g. http://myapp.test

LOG_CHANNEL=stack
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=db
DB_PORT=3306
# For local development, using root user simplifies tenant DB creation permissions
DB_DATABASE=laravel_central # Name of the main central application database
DB_USERNAME=root
DB_PASSWORD=secret # This MUST match MYSQL_ROOT_PASSWORD in docker-compose.yml
# Alternatively, for a dedicated user (e.g., 'sail'):
# DB_DATABASE=laravel_central
# DB_USERNAME=sail
# DB_PASSWORD=password # This MUST match MYSQL_PASSWORD for the 'sail' user in docker-compose.yml
# And ensure this 'sail' user has 'CREATE DATABASE' privileges on the MySQL server.

# Stancl/Tenancy uses the DB_CONNECTION above to manage tenants.
# The following TENANCY_DB_* vars are illustrative but might not be directly
# used by stancl/tenancy if it relies on the main DB_CONNECTION.
# Ensure the user from DB_CONNECTION has rights to create databases.
TENANCY_DB_HOST=db
TENANCY_DB_USERNAME=${DB_USERNAME} # Inherits from above
TENANCY_DB_PASSWORD=${DB_PASSWORD} # Inherits from above

# For docker-compose MySQL service
MYSQL_ROOT_PASSWORD=secret # MySQL root password inside the DB container
# If using a dedicated 'sail' user:
# MYSQL_DATABASE=${DB_DATABASE} # Database to be created on init for the 'sail' user
# MYSQL_USER=${DB_USERNAME} # User to be created
# MYSQL_PASSWORD=${DB_PASSWORD} # Password for the new user

# Cache, Session, Queue - Recommended to use Redis with Docker
CACHE_STORE=redis
SESSION_DRIVER=redis
QUEUE_CONNECTION=redis # Set to 'sync' if you don't want a dedicated queue worker for dev

REDIS_HOST=redis
REDIS_PASSWORD=null
REDIS_PORT=6379

# Mail configuration for Mailpit
MAIL_MAILER=smtp
MAIL_HOST=mailpit
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@${APP_URL#http://}"
MAIL_FROM_NAME="${APP_NAME}"

# Vite - Assuming assets are built in Dockerfile and served by Nginx
# VITE_ASSET_URL="${APP_URL}/build"
# If running Vite dev server (e.g., `yarn dev` in app container on port 5173):
# VITE_ORIGIN_URL="http://localhost:5173" # Laravel uses this to generate asset URLs
# VITE_CLIENT_PORT="5173" # Port Vite's HMR client connects to

# Docker Compose Port Mapping Variables
APP_PORT=80 # Host port for Nginx
FORWARD_DB_PORT=3306 # Host port for MySQL
FORWARD_REDIS_PORT=6379 # Host port for Redis
FORWARD_MAILPIT_PORT=1025 # Host port for Mailpit SMTP
FORWARD_MAILPIT_UI_PORT=8025 # Host port for Mailpit Web UI

# Entrypoint script behavior
OPTIMIZE_APP=false # Set to true to run artisan optimize commands on startup
SETUP_TENANTS_ON_STARTUP=true # Set to true to run `php artisan tenants:setup` on startup
AUTO_MIGRATE_TENANTS=true # If SETUP_TENANTS_ON_STARTUP=false, set to true to run `php artisan tenants:migrate`

# Central domains for tenancy (from config/tenancy.php)
# This should match the domain part of APP_URL. Used by stancl/tenancy.
# Example: if APP_URL=http://myapp.test, then set CENTRAL_DOMAIN=myapp.test
# If APP_URL=http://localhost, then set CENTRAL_DOMAIN=localhost
CENTRAL_DOMAIN=localhost

# AWS S3 Example (if you switch FILESYSTEM_DISK to s3 for tenant/public files)
# FILESYSTEM_DISK=s3
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_DEFAULT_REGION=us-east-1
# AWS_BUCKET=
# AWS_USE_PATH_STYLE_ENDPOINT=false
